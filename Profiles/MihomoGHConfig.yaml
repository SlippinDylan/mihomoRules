# 机场订阅配置
proxy-providers:
  Pander:
    url: "机场订阅"
    type: http
    interval: 86400
    # 健康检查配置
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连节点
    header:
      User-Agent: ["Clash", "mihomo", "Clash.meta"]
    override:
      udp: true
      skip-cert-verify: true

# 节点信息
proxies:
  - {name: 直连节点, type: direct, udp: true}

# 全局端口和网络配置
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
mode: rule

# 系统和性能配置
find-process-mode: 'off'
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

# 控制面板配置
external-controller: 0.0.0.0:9090
secret: "dylan1010"
external-ui: "/etc/mihomo/run/ui"
external-ui-name: zashboard
external-ui-url: "https://gh-proxy.com/raw.githubusercontent.com/Zephyruso/zashboard/releases/latest/download/dist.zip"

# 嗅探配置
sniffer:
  enable: true
  # 端口嗅探设置
  sniff:
    HTTP: {ports: [80, 8080-8880], override-destination: true}
    TLS: {ports: [443, 8443]}
    QUIC: {ports: [443, 8443]}
  force-domain: ["+.v2ex.com"]
  skip-domain: [
    "rule-set:private_domain,cn_domain", "dlg.io.mi.com", 
    "+.push.apple.com", "+.apple.com", "+.wechat.com", 
    "+.qpic.cn", "+.qq.com", "+.wechatapp.com", 
    "+.vivox.com", "+.oray.com", "+.sunlogin.net", 
    "+.msftconnecttest.com", "+.msftncsi.com"
  ]

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "+.services.googleapis.cn"
    - "+.xn--ngstr-lra8j.com"
    - "+.ntp.tencent.com"
    - "+.ntp1.aliyun.com"
    - "time.*.com"
    - "+.ntp.ntsc.ac.cn"
    - "+.pool.ntp.org"
    - "+.cn.ntp.org.cn"
  default-nameserver:
    - 221.5.203.98
    - 223.5.5.5
    - 119.29.29.29
  proxy-server-nameserver:
    - 221.5.203.98
    - 223.5.5.5
    - 119.29.29.29
  nameserver:
    - 221.5.203.98
    - 223.5.5.5
    - 119.29.29.29
 
# 出站策略定义
proxymain: &proxymain {
  type: select, 
  proxies: [
    🌏 亚洲自动, 🇭🇰 香港自动, 
    🇨🇳 台湾自动, 🇯🇵 日本自动, 
    🇸🇬 狮城自动, 🇺🇸 美国自动, 
    🗺 环球节点, 🚀 全部节点, 
    🚥 直连访问
  ]
}

directmain: &directmain {
  type: select, 
  proxies: [
    🚥 直连访问, 🌏 亚洲自动, 
    🇭🇰 香港自动, 🇨🇳 台湾自动, 
    🇯🇵 日本自动, 🇸🇬 狮城自动, 
    🇺🇸 美国自动, 🗺 环球节点, 
    🚀 全部节点
  ]
}

proxy-groups:
  # 核心代理策略组
  - {name: 🪜 翻墙代理, <<: *proxymain}
  - {name: 🚥 直连访问, type: select, proxies: [直连节点]}

  # 特定服务策略组
  - {name: 🍎 Apple, <<: *directmain}
  - {name: 🍎 ApplePxy, <<: *proxymain}
  - {name: Ⓜ️ MicrosoftCN, <<: *directmain}
  - {name: Ⓜ️ Microsoft, <<: *proxymain}
  - {name: 🔍 Google, <<: *proxymain}

  # AI和开发相关
  - {name: 🐙 Develop, <<: *proxymain}
  - {name: 🤖 Intelligence, type: select, proxies: [🇯🇵 日本自动, 🇺🇸 美国自动]}

  # 资料管理
  - {name: 💾 Synology, <<: *directmain}

  # 通讯和钱包
  - {name: 📱 Telegram, type: select, proxies: [
      🇸🇬 狮城自动, 🇭🇰 香港自动, 
      🇨🇳 台湾自动, 🇯🇵 日本自动, 
      🇺🇸 美国自动, 🗺 环球节点, 
      🚀 全部节点
    ]}
  - {name: 💰 Wallet, type: select, proxies: [
      🇨🇳 台湾自动, 🚥 直连访问, 
      🇭🇰 香港自动, 🇯🇵 日本自动, 
      🇸🇬 狮城自动, 🇺🇸 美国自动, 
      🗺 环球节点, 🚀 全部节点
    ]}

  # 媒体和娱乐
  - {name: 🎸 Spotify, <<: *directmain}

  - {name: 🎵 TikTok, type: select, proxies: [🇺🇸 美国自动, 直连节点]}
  - {name: 📽️ 国外流媒体, type: select, proxies: [📺 流媒自动, 直连节点]}

  # 游戏相关
  - {name: 🎮 游戏直连, <<: *directmain}
  - {name: 🎮 游戏代理, <<: *proxymain}

  # 其他
  - {name: 🧭 Speedtest, <<: *directmain}
  - {name: 🐠 漏网之鱼, <<: *proxymain}

  # 地域自动选择
  - {name: 🇭🇰 香港自动, type: url-test, include-all: true, tolerance: 20, interval: 300, 
     filter: "(?=.*(香港|HK|Hong Kong|🇭🇰|HongKong))^((?!(福利|V1|0.1x|0.2x|0.3x|0.4x|0.5x|0.6x|0.7x|0.8x|0.9x|3x|4x|5x)).)*$"}
  - {name: 🇨🇳 台湾自动, type: url-test, include-all: true, tolerance: 20, interval: 300, 
     filter: "(?=.*(台湾|🇹🇼))^((?!(福利|V1|0.1x|0.2x|0.3x|0.4x|0.5x|0.6x|0.7x|0.8x|0.9x|3x|4x|5x)).)*$"}
  - {name: 🇯🇵 日本自动, type: url-test, include-all: true, tolerance: 20, interval: 300, 
     filter: "(?=.*(日本|🇯🇵))^((?!(福利|V1|0.1x|0.2x|0.3x|0.4x|0.5x|0.6x|0.7x|0.8x|0.9x|3x|4x|5x)).)*$"}
  - {name: 🇸🇬 狮城自动, type: url-test, include-all: true, tolerance: 20, interval: 300, 
     filter: "(?=.*(新加坡|🇸🇬))^((?!(福利|V1|0.1x|0.2x|0.3x|0.4x|0.5x|0.6x|0.7x|0.8x|0.9x|3x|4x|5x)).)*$"}
  - {name: 🌏 亚洲自动, type: url-test, include-all: true, tolerance: 20, interval: 300, 
     filter: "(?=.*(香港|HK|Hong Kong|🇭🇰|HongKong|日本|🇯🇵|新加坡|🇸🇬))^((?!(台湾|🇹🇼|福利|V1|0.1x|0.2x|0.3x|0.4x|0.5x|0.6x|0.7x|0.8x|0.9x|3x|4x|5x)).)*$"}
  - {name: 🇺🇸 美国自动, type: url-test, include-all: true, tolerance: 20, interval: 300, 
     filter: "(?=.*(美国|🇺🇸))^((?!(福利|V1|0.1x|0.2x|0.3x|0.4x|0.5x|0.6x|0.7x|0.8x|0.9x|3x|4x|5x)).)*$"}
  - {name: 📺 流媒自动, type: url-test, include-all: true, tolerance: 20, interval: 300, 
     filter: "(?=.*(NF|Disney|HBO|Hulu))^((?!(福利|V1|0.1x|0.2x|0.3x|0.4x|0.5x|0.6x|0.7x|0.8x|0.9x|3x|4x|5x)).)*$"}

  # 全局节点
  - {name: 🗺 环球节点, type: select, include-all: true, 
     filter: "^((?!(香港|HK|Taiwan|日本|新加坡|美国|福利|新用户|直连)).)*$"}
  - {name: 🚀 全部节点, type: select, include-all: true}

# 规则匹配 此规则部分没有做防泄露处理,因为弊严重大于利！注意顺序
rules:
  # 基础网络和隐私规则
  - RULE-SET,private_domain,🚥 直连访问
  
  # AI和智能服务
  - RULE-SET,category_ai_chat_notcn_domain,🤖 Intelligence
  - RULE-SET,usr_proxy_intelligence,🤖 Intelligence
  
  # 开发
  - RULE-SET,docker_domain,🐙 Develop
  - RULE-SET,category_dev_domain,🐙 Develop
  - RULE-SET,develousr_domain,🐙 Develop
  - RULE-SET,linux_domain,🐙 Develop
  - RULE-SET,usr_proxy_develop,🐙 Develop
  
  # 工具和实用服务
  - RULE-SET,onedrive_domain,Ⓜ️ MicrosoftCN
  - RULE-SET,synology_domain,💾 Synology
  - RULE-SET,speedtest_domain,🧭 Speedtest
  
  # 通讯服务
  - RULE-SET,telegram_domain,📱 Telegram
  - RULE-SET,paypal_domain,💰 Wallet
  
  # 媒体服务
  - RULE-SET,spotify_domain,🎸 Spotify
  - RULE-SET,tiktok_domain,🎵 TikTok
  
  # 流媒体服务
  - RULE-SET,usr_proxy_media,📽️ 国外流媒体
  - RULE-SET,globalmedia_domain,📽️ 国外流媒体
  - RULE-SET,category_media_domain,📽️ 国外流媒体
  - RULE-SET,category_media_cn_domain,🚥 直连访问
  - RULE-SET,chinamedia_domain,🚥 直连访问
  
  # 游戏
  - RULE-SET,gamedownloadcn_domain,🎮 游戏直连
  - RULE-SET,category_games_cn_domain,🎮 游戏直连
  - RULE-SET,gamedownload_domain,🎮 游戏代理
  - RULE-SET,category_games_domain,🎮 游戏代理
  
  # 互联网巨头服务
  - RULE-SET,apple_domain,🍎 Apple
  - RULE-SET,apple_notcn_domain,🍎 ApplePxy
  - RULE-SET,google_domain,🔍 Google
  - RULE-SET,microsoft_cn_domain,Ⓜ️ MicrosoftCN
  - RULE-SET,microsoft_domain,Ⓜ️ Microsoft
  - RULE-SET,xiaomi_domain,🚥 直连访问
  
  # 全局代理
  - RULE-SET,usr_direct,🚥 直连访问
  - RULE-SET,usr_proxy,🪜 翻墙代理
  - RULE-SET,proxy_domain,🪜 翻墙代理
  - RULE-SET,gfw_domain,🪜 翻墙代理
  - RULE-SET,geolocation_notcn_domain,🪜 翻墙代理
  - RULE-SET,direct_torrent,🚥 直连访问
  - RULE-SET,cn_domain,🚥 直连访问
  
  # IP规则
  ## 开发相关
  - RULE-SET,usr_proxy_develop_ip,🐙 Develop,no-resolve
  ## 通讯服务
  - RULE-SET,telegram_ip,📱 Telegram,no-resolve
  ## 流媒体服务
  - RULE-SET,globalmedia_ip,📽️ 国外流媒体,no-resolve
  - RULE-SET,chinamedia_ip,🚥 直连访问
  ## 互联网巨头服务
  - RULE-SET,google_ip,🔍 Google,no-resolve
  - RULE-SET,apple_ip,🍎 Apple
  - RULE-SET,xiaomi_ip,🚥 直连访问
  ## 全局代理
  - RULE-SET,direct_torrent_ip,🚥 直连访问
  - RULE-SET,cn_ip,🚥 直连访问
  - MATCH,🐠 漏网之鱼

# 规则集锚点定义
rule-anchor:
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}

rule-providers:
  # 基础网络和隐私规则
  private_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  
  # AI和智能服务
  category_ai_chat_notcn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs"}
  usr_proxy_intelligence: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/MRS/Proxy-Intelligence.mrs"}
  
  # 开发
  category_dev_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-dev.mrs"}
  develousr_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Developer/Developer_OCD_Domain.mrs"}
  docker_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Docker/Docker_OCD_Domain.mrs"}
  linux_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/linux.mrs"}
  usr_proxy_develop: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/MRS/Proxy-Develop.mrs"}
  
  # 工具和实用服务
  onedrive_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  synology_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/synology.mrs"}
  speedtest_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/speedtest.mrs"}
  
  # 通讯服务
  telegram_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  paypal_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  
  # 媒体服务
  spotify_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.mrs"}
  tiktok_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  
  # 流媒体服务
  usr_proxy_media: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/MRS/Proxy-Media.mrs"}
  globalmedia_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/GlobalMedia/GlobalMedia_OCD_Domain.mrs"}
  category_media_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-media.mrs"}
  category_media_cn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-media-cn.mrs"}
  chinamedia_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/ChinaMedia/ChinaMedia_OCD_Domain.mrs"}
  
  # 游戏
  gamedownloadcn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Game/GameDownloadCN/GameDownloadCN_OCD_Domain.mrs"}
  category_games_cn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-games%40cn.mrs"}
  gamedownload_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Game/GameDownload/GameDownload_OCD_Domain.mrs"}
  category_games_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-games.mrs"}
  
  # 互联网巨头服务
  apple_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"}
  apple_notcn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple%40cn.mrs"}
  google_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  microsoft_cn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft%40cn.mrs"}
  microsoft_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  xiaomi_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/XiaoMi/XiaoMi_OCD_Domain.mrs"}
  
  # 全局代理
  usr_direct: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/MRS/Direct.mrs"}
  usr_proxy: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/MRS/Proxy.mrs"}
  proxy_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geosite/proxy.mrs"}
  gfw_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation_notcn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  
  # IP规则
  ## 开发
  usr_proxy_develop_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/MRS/Proxy-Develop-IP.mrs"}
  ## 通讯服务
  telegram_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  ## 流媒体服务
  globalmedia_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/GlobalMedia/GlobalMedia_OCD_IP.mrs"}
  chinamedia_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/ChinaMedia/ChinaMedia_OCD_IP.mrs"}
  ## 互联网巨头服务
  google_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  apple_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geoip/apple.mrs"}
  xiaomi_ip: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/MRS/Direct-IP.mrs"}
  ## 全局代理
  direct_torrent: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/MRS/Direct-Torrent.mrs"}
  cn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  direct_torrent_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/MRS/Direct-Torrent-IP.mrs"}
  cn_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}