# 机场订阅模板锚点定义
base-provider-template: &baseProvider {type: http, interval: 3600, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 180, lazy: false, tolerance: 10}, proxy: 🎯 国内直连, header: {User-Agent: ["Clash", "mihomo", "Clash.meta"]}, override: {udp: true, skip-cert-verify: true}}
# DNS服务器配置锚点定义
dns-servers:
  # 国内和国外DNS服务器配置
  domestic: &domestic-dns [https://doh.pub/dns-query, https://dns.alidns.com/dns-query]
  # 国外DNS服务器配置
  foreign: &foreign-dns [tls://8.8.8.8#🚀 翻墙代理, tls://1.1.1.1#🚀 翻墙代理&h3=true]
  # 基础DNS服务器配置
  basic: &basic-dns [119.29.29.29, tls://223.5.5.5, tls://1.12.12.12, "tls://[2402:4e00::]", "tls://[2400:3200::1]"]
  # 直接DNS服务器配置
  direct: &direct-dns [119.29.29.29, 223.5.5.5]
# 节点配出规则锚点定义
filters: 
  as: &as_filter "(?i)^.*(?=.*(香港|HK|Hong Kong|HongKong|🇭🇰|台湾|TW|TWN|Taiwan|🇹🇼|日本|JP|Japan|Tokyo|🇯🇵|新加坡|狮城|Singapore|SG|🇸🇬))(?!.*(福利|新用户|邀请|网址|com|0\\.[1-9]|[2-9](\\.\\d+)?倍|[1-9]\\d倍)).*$"
  ai: &ai_filter "(?i)^.*(?=.*(日本|JP|Japan|Tokyo|🇯🇵|美国|USA|US|America|United States|🇺🇸))(?!.*(福利|新用户|邀请|网址|com|0\\.[1-9]|[2-9](\\.\\d+)?倍|[1-9]\\d倍)).*$"
  us: &us_filter "(?i)^.*(?=.*(美国|USA|US|America|United States|🇺🇸))(?!.*(福利|新用户|邀请|网址|com|0\\.[1-9]|[2-9](\\.\\d+)?倍|[1-9]\\d倍)).*$"
  bak: &bak_filter "^((?!福利|新用户|邀请|网址|com|0\\.[1-9]|[2-9](\\.\\d+)?倍|[1-9]\\d倍).)*$"
  nas: &nas_filter "(?i)^((?!(香港|HK|Hong Kong|HongKong|🇭🇰|台湾|TW|TWN|Taiwan|🇹🇼|日本|JP|Japan|Tokyo|🇯🇵|新加坡|狮城|Singapore|SG|🇸🇬|美国|USA|US|America|United States|🇺🇸|福利|新用户|邀请|网址|com)).)*$"
  all: &all_filter "^((?!福利|新用户|邀请|网址|com|0\\.[1-9]|[2-9](\\.\\d+)?倍|[1-9]\\d倍).)*$"
# 出站策略锚点定义
proxymain: &proxymain {type: select, proxies: [🌏 亚洲Smart, 🛰 全部节点, 🧱 备份Smart, 🎯 国内直连]}
directmain: &directmain {type: select, proxies: [🎯 国内直连, 🌏 亚洲Smart, 🛰 全部节点, 🧱 备份Smart]}

# 机场订阅配置
proxy-providers:
  flyingBird:
    <<: *baseProvider
    url: "订阅链接"
  yiYuan:
    <<: *baseProvider
    url: "订阅链接"

# 节点信息
proxies: [{name: "直接连接", type: direct, udp: true}]
# 全局端口和网络配置
part1: {log-level: info, mode: rule, ipv6: true, port: 7890, unified-delay: true, tcp-concurrent: true, bind-address: "*", allow-lan: true}
# 系统和性能配置
part2: {find-process-mode: 'off', global-client-fingerprint: chrome, disable-keep-alive: false, keep-alive-interval: 15, keep-alive-idle: 600, profile: {store-selected: true, store-fake-ip: true, tracing: true, interval: 7200}}
# GeoX数据配置
part3: {geodata-mode: true, geodata-loader: standard, geox-url: {geosite: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat", geoip-mmdb: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.metadb", geoip-dat: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat", asn: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb"}, geox-auto-update: true, geox-update-interval: 24}

# 嗅探配置
sniffer:
  enable: true
  # 端口嗅探设置
  sniff: {
    HTTP: {ports: [80, 8080-8880], override-destination: true},
    TLS: {ports: [443, 8443], override-destination: true},
    QUIC: {ports: [443, 8443], override-destination: true}
  }
  force-domain: ["+.v2ex.com"]
  skip-domain: [
    "rule-set:category_media_cn_domain,chinamedia_domain,gamedownloadcn_domain,category_games_cn_domain,cn_domain,usr_direct,private_domain,usr_direct_torrent", 
    "+.push.apple.com", "+.apple.com", "+.wechat.com", "start.me","+.start.me",
    "+.ntp.tencent.com", "+.ntp1.aliyun.com", "time.*.com", "+.ntp.ntsc.ac.cn", "+.pool.ntp.org", "+.cn.ntp.org.cn", 
    "+.qpic.cn", "+.wechatapp.com", "+.vivox.com", "+.oray.com", "+.sunlogin.net", 
    "+.msftconnecttest.com", "+.msftncsi.com", "Mijia Cloud", 
    "+.tsinghua.edu.cn", "+.slippindylan.com"
  ]

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  respect-rules: true
  # enable-dnssec: true
  doh-priority-http3: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-cache: true
  fake-ip-filter-mode: blacklist
  fake-ip-filter: [
    "rule-set:category_media_cn_domain,chinamedia_domain,gamedownloadcn_domain,category_games_cn_domain,cn_domain,usr_direct,private_domain,usr_direct_torrent,docker_domain,category_dev_domain,develousr_domain,linux_domain,usr_proxy_develop", 
    "+.services.googleapis.cn", "+.xn--ngstr-lra8j.com", 
    "+.ntp.tencent.com", "+.ntp1.aliyun.com", "time.*.com", "+.ntp.ntsc.ac.cn", "+.pool.ntp.org", "+.cn.ntp.org.cn", 
    "+.yarnpkg.com", "+.ustclug.org", "mirrors.vsean.net", "+.vsean.net",
    "+.lan", "+.local", "geosite:cn", "+.slippindylan.com", "start.me","+.start.me",
  ]
  # DNS服务器配置
  # 基础服务器 (default-nameserver): 用于解析 DNS 服务器自身的域名，必须是纯 IP 地址
  default-nameserver: *basic-dns
  # 直接 DNS 服务器 (direct-nameserver): 用于解析不经过代理的域名，必须是纯 IP 地址
  direct-nameserver: *direct-dns
  # 直接 DNS 服务器跟随策略 (direct-nameserver-follow-policy): 是否跟随规则中的 nameserver-policy
  direct-nameserver-follow-policy: false
  # 代理节点解析服务器 (proxy-server-nameserver): 用于解析代理节点的域名，需通过代理访问
  proxy-server-nameserver: *domestic-dns
  # 默认解析服务器 (nameserver): 处理大多数常规 DNS 查询
  nameserver: *domestic-dns
  nameserver-policy: {
    github.com: *foreign-dns, +.github.com: *foreign-dns, +.*.github.com: *foreign-dns, +.githubusercontent.com: *foreign-dns, +.debian.org: *foreign-dns, +.yarnpkg.com: *foreign-dns, +.ustclug.org: *foreign-dns, +.immortalwrt.org: *foreign-dns, +.openwrt.org: *foreign-dns, +.vsean.net: *foreign-dns,
    "rule-set:private_domain,category_media_cn_domain,chinamedia_domain,usr_direct,usr_direct_torrent,cn_domain": *domestic-dns,
    "rule-set:usr_proxy,proxy_domain,gfw_domain": *foreign-dns
  }

proxy-groups:
  # 核心代理策略组
  - {name: 🚀 翻墙代理, <<: *proxymain}
  - {name: 🎯 国内直连, type: select, proxies: [直接连接]}
  # 特定服务策略组
  - {name: 🍎 Apple, <<: *directmain}
  - {name:  ApplePxy, <<: *proxymain}
  - {name: ☁️ MicrosoftCN, <<: *directmain}
  - {name: Ⓜ️ Microsoft, <<: *proxymain}
  - {name: 🅖 Google, <<: *proxymain}
  # 工具软件
  - {name: 🦑 Develop, <<: *proxymain}
  - {name: 🧠 Intelligence, type: select, proxies: [🤖 AISmart, 🛰 全部节点]}
  # 通讯和钱包
  - {name: 🛩️ Telegram, type: smart, include-all: true, interval: 60, uselightgbm: false, collectdata: true, filter: *as_filter}
  - {name: 💰 Wallet, type: select, include-all: true, interval: 60, filter: *all_filter}
  # 媒体和娱乐
  - {name: 🎵 Spotify, <<: *directmain}
  - {name: 🎶 TikTok, type: smart, use: [flyingBird], interval: 60, uselightgbm: false, collectdata: true, filter: *us_filter}
  - {name: 📺 国外流媒体, <<: *proxymain}
  - {name: 🕹️ 游戏直连, <<: *directmain}
  - {name: 🎮 游戏代理, <<: *proxymain}
  # 其他
  - {name: ⏱ Speedtest, <<: *directmain}
  - {name: 🐠 漏网之鱼, type: select, proxies: [🌏 亚洲Smart, 🧱 备份Smart, 🎯 国内直连]}

  - {name: 🌏 亚洲Smart, type: smart, use: [flyingBird], interval: 60, uselightgbm: false, collectdata: true, policy-priority: "(?i)香港|HK|Hong Kong|HongKong|🇭🇰:1.5;(?i)新加坡|狮城|Singapore|SG|🇸🇬:1.4;(?i)日本|JP|Japan|Tokyo|🇯🇵:1.3;(?i)台湾|TW|TWN|Taiwan|Taipei|HiNet|Taoyuan|Tainan|Taichung|🇹🇼:1.2", filter: *as_filter}
  - {name: 🤖 AISmart, type: smart, use: [flyingBird], interval: 60, uselightgbm: false, collectdata: true, policy-priority: "(?i)日本|JP|Japan|Tokyo|🇯🇵:1.3;(?i)新加坡|狮城|Singapore|SG|🇸🇬:1.2;(?i)美国|USA|US|America|United States|🇺🇸:1.1", filter: *ai_filter}
  - {name: 🧱 备份Smart, type: smart, use: [yiYuan], interval: 60, uselightgbm: false, collectdata: true, policy-priority: "(?i)香港|HK|Hong Kong|HongKong|🇭🇰:1.5;(?i)新加坡|狮城|Singapore|SG|🇸🇬:1.4;(?i)日本|JP|Japan|Tokyo|🇯🇵:1.3;(?i)台湾|TW|TWN|Taiwan|Taipei|HiNet|Taoyuan|Tainan|Taichung|🇹🇼:1.2", filter: *bak_filter}

  - {name: 🌏 亚洲代理, type: select, include-all: true, interval: 60, filter: *as_filter}
  - {name: 🇺🇸 美国代理, type: select, include-all: true, interval: 60, filter: *us_filter}
  - {name: 🌍 环球节点, type: select, include-all: true, interval: 60, filter: *nas_filter}
  - {name: 🛰 全部节点, type: select, include-all: true, interval: 60, filter: *all_filter}

# 规则匹配
rules:
  - IP-CIDR,127.0.0.1/32,🚀 翻墙代理
  - IP-CIDR,10.10.0.1/32,🚀 翻墙代理
  
  # 基础网络和隐私规则
  - RULE-SET,private_domain,🎯 国内直连
  
  # AI和智能服务
  - RULE-SET,category_ai_chat_notcn_domain,🧠 Intelligence
  - RULE-SET,usr_proxy_intelligence,🧠 Intelligence
  
  # 开发
  - RULE-SET,docker_domain,🦑 Develop
  - RULE-SET,category_dev_domain,🦑 Develop
  - RULE-SET,develousr_domain,🦑 Develop
  - RULE-SET,linux_domain,🦑 Develop
  - RULE-SET,usr_proxy_develop,🦑 Develop
  
  # 工具和实用服务
  - RULE-SET,onedrive_domain,☁️ MicrosoftCN
  - RULE-SET,synology_domain,🎯 国内直连
  - RULE-SET,speedtest_domain,⏱ Speedtest
  
  # 通讯服务
  - RULE-SET,telegram_domain,🛩️ Telegram
  - RULE-SET,paypal_domain,💰 Wallet
  
  # 媒体服务
  - RULE-SET,spotify_domain,🎵 Spotify
  - RULE-SET,tiktok_domain,🎶 TikTok
  
  # 流媒体服务
  - RULE-SET,usr_proxy_media,📺 国外流媒体
  - RULE-SET,globalmedia_domain,📺 国外流媒体
  - RULE-SET,category_media_domain,📺 国外流媒体
  - RULE-SET,category_media_cn_domain,🎯 国内直连
  - RULE-SET,chinamedia_domain,🎯 国内直连
  
  # 游戏
  - RULE-SET,gamedownloadcn_domain,🕹️ 游戏直连
  - RULE-SET,category_games_cn_domain,🕹️ 游戏直连
  - RULE-SET,gamedownload_domain,🎮 游戏代理
  - RULE-SET,category_games_domain,🎮 游戏代理
  
  # 互联网巨头服务
  - RULE-SET,apple_domain,🍎 Apple
  - RULE-SET,apple_notcn_domain, ApplePxy
  - RULE-SET,google_domain,🅖 Google
  - RULE-SET,microsoft_cn_domain,☁️ MicrosoftCN
  - RULE-SET,microsoft_domain,Ⓜ️ Microsoft

  # 个人代理-域名
  - RULE-SET,usr_direct,🎯 国内直连
  - RULE-SET,usr_proxy,🚀 翻墙代理
  - RULE-SET,usr_direct_torrent,🎯 国内直连

  # 全局代理
  - RULE-SET,proxy_domain,🚀 翻墙代理
  - RULE-SET,gfw_domain,🚀 翻墙代理
  - RULE-SET,geolocation_notcn_domain,🚀 翻墙代理
  - RULE-SET,cn_domain,🎯 国内直连

  # IP规则
  - RULE-SET,usr_direct_torrent_ip,🎯 国内直连
  - RULE-SET,usr_proxy_develop_ip,🦑 Develop,no-resolve
  - RULE-SET,telegram_ip,🛩️ Telegram,no-resolve
  - RULE-SET,globalmedia_ip,📺 国外流媒体,no-resolve
  - RULE-SET,chinamedia_ip,🎯 国内直连
  - RULE-SET,google_ip,🅖 Google,no-resolve
  - RULE-SET,apple_ip,🍎 Apple
  - RULE-SET,cn_ip,🎯 国内直连
  - MATCH,🐠 漏网之鱼

# 规则集锚点定义
rule-anchor:
  domain: &domain {type: http, interval: 7200, behavior: domain, format: mrs}
  class: &class {type: http, interval: 7200, behavior: classical, format: text}
  ip: &ip {type: http, interval: 7200, behavior: ipcidr, format: mrs}

rule-providers:
  # 基础网络和隐私规则
  private_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  
  # AI和智能服务
  category_ai_chat_notcn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs"}
  usr_proxy_intelligence: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/Proxy_Intelligence.mrs"}
  
  # 开发
  category_dev_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-dev.mrs"}
  develousr_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Developer/Developer_OCD_Domain.mrs"}
  docker_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Docker/Docker_OCD_Domain.mrs"}
  linux_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/linux.mrs"}
  usr_proxy_develop: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/Proxy_Develop.mrs"}
  
  # 工具和实用服务
  onedrive_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  synology_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/synology.mrs"}
  speedtest_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/speedtest.mrs"}
  
  # 通讯服务
  telegram_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  paypal_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  
  # 媒体服务
  spotify_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.mrs"}
  tiktok_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  
  # 流媒体服务
  usr_proxy_media: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/Proxy_Media.mrs"}
  globalmedia_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/GlobalMedia/GlobalMedia_OCD_Domain.mrs"}
  category_media_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-media.mrs"}
  category_media_cn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-media-cn.mrs"}
  chinamedia_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/ChinaMedia/ChinaMedia_OCD_Domain.mrs"}
  
  # 游戏
  gamedownloadcn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Game/GameDownloadCN/GameDownloadCN_OCD_Domain.mrs"}
  category_games_cn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-games%40cn.mrs"}
  gamedownload_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Game/GameDownload/GameDownload_OCD_Domain.mrs"}
  category_games_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-games.mrs"}
  
  # 互联网巨头服务
  apple_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"}
  apple_notcn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple%40cn.mrs"}
  google_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  microsoft_cn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft%40cn.mrs"}
  microsoft_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  
  # 全局代理
  usr_direct: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/Direct.mrs"}
  usr_direct_torrent: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/Direct_Torrent.mrs"}
  usr_proxy: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/Proxy.mrs"}
  proxy_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geosite/proxy.mrs"}
  gfw_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation_notcn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  
  # IP规则
  usr_proxy_develop_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/Proxy_Develop_IP.mrs"}
  telegram_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  globalmedia_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/GlobalMedia/GlobalMedia_OCD_IP.mrs"}
  chinamedia_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/ChinaMedia/ChinaMedia_OCD_IP.mrs"}
  google_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  apple_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geoip/apple.mrs"}
  usr_direct_torrent_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/Direct_Torrent_IP.mrs"}
  cn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}

hosts: {'netcore.slippindylan.com': 10.10.0.1, 'mihomopanel.slippindylan.com': 10.10.0.1, 'netcoretest.slippindylan.com': 10.10.0.5, 'mihomotestpanel.slippindylan.com': 10.10.0.5, 'h3core.slippindylan.com': 10.10.0.11, 'esxivsw.slippindylan.com': 10.10.0.21, 'synofilev.slippindylan.com': 10.10.0.32, 'synodisk.slippindylan.com': 10.10.0.32, 'plexstrm.slippindylan.com': 10.10.0.32, 'authentik.slippindylan.com': 10.10.0.51, 'container.slippindylan.com': 10.10.0.51, 'dbfilev.slippindylan.com': 10.10.0.51, 'ddnsgo.slippindylan.com': 10.10.0.51, 'outline.slippindylan.com': 10.10.0.51, 'resume.slippindylan.com': 10.10.0.51, 'scrypted.slippindylan.com': 10.10.0.51, 'stash.slippindylan.com': 10.10.0.51, 'strmflosr.slippindylan.com': 10.10.0.51, 'strmflpwr.slippindylan.com': 10.10.0.51, 'strmflqbt.slippindylan.com': 10.10.0.51, 'strmflrdr.slippindylan.com': 10.10.0.51, 'strmflsrr.slippindylan.com': 10.10.0.51, 'trfkprx.slippindylan.com': 10.10.0.51, 'webssh.slippindylan.com': 10.10.0.51, 'xhs_pic_down.slippindylan.com': 10.10.0.51, 'hassio.slippindylan.com': 10.10.1.1, 'hiksvcv.slippindylan.com': 10.10.1.2}