# 机场订阅配置
proxy-providers:
  Pander:
    url: "订阅链接"
    type: http
    interval: 14400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
      lazy: false
      tolerance: 50
    proxy: 国内直连
    header:
      User-Agent: ["Clash", "mihomo", "Clash.meta"]
    override:
      udp: true
      skip-cert-verify: true
  
  Bocchi:
    url: "订阅链接"
    type: http
    interval: 14400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
      lazy: false
      tolerance: 50
    proxy: 国内直连
    header:
      User-Agent: ["Clash", "mihomo", "Clash.meta"]
    override:
      udp: true
      skip-cert-verify: true

# 节点信息
proxies: 
  - name: "直接连接"
    type: direct
    udp: true

# 全局端口和网络配置
log-level: info
mode: rule
ipv6: true
port: 7890
unified-delay: true
tcp-concurrent: true
bind-address: "*"
allow-lan: true

# 系统和性能配置
find-process-mode: 'off'
global-client-fingerprint: chrome
disable-keep-alive: false
keep-alive-interval: 15
keep-alive-idle: 600
profile:
  store-selected: true
  store-fake-ip: true
  tracing: true
  interval: 14400


# GeoX数据配置
geodata-mode: true
geodata-loader: standard
geox-url:
  geosite: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat"
  geoip-mmdb: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.metadb"
  geoip-dat: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat"
  asn: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb"
geox-auto-update: true
geox-update-interval: 4

# 嗅探配置
sniffer:
  enable: true
  # 端口嗅探设置
  sniff: {
    HTTP: {ports: [80, 8080-8880], override-destination: true},
    TLS: {ports: [443, 8443], override-destination: true},
    QUIC: {ports: [443, 8443], override-destination: true}
  }
  force-domain: ["+.v2ex.com"]
  skip-domain: [
    # "rule-set:category_media_cn_domain,chinamedia_domain,gamedownloadcn_domain,category_games_cn_domain,aliyun_domain,alibaba_domain,tencent_domain,xiaomi_domain,xiaohongshu_domain,cn_domain,usr_direct,private_domain,direct_torrent", 
    "rule-set:category_media_cn_domain,chinamedia_domain,gamedownloadcn_domain,category_games_cn_domain,cn_domain,usr_direct,private_domain,direct_torrent", 
    "+.push.apple.com", "+.apple.com", "+.wechat.com", "start.me","+.start.me",
    "+.qpic.cn", "+.wechatapp.com", "+.vivox.com", "+.oray.com", "+.sunlogin.net", 
    "+.msftconnecttest.com", "+.msftncsi.com", "Mijia Cloud", 
    "+.tsinghua.edu.cn"
  ]

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  respect-rules: true
  enable-dnssec: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-cache: true
  fake-ip-filter-mode: blacklist
  fake-ip-filter: [
    # "rule-set:category_media_cn_domain,chinamedia_domain,gamedownloadcn_domain,category_games_cn_domain,aliyun_domain,alibaba_domain,tencent_domain,xiaomi_domain,xiaohongshu_domain,cn_domain,usr_direct,private_domain,direct_torrent,docker_domain,category_dev_domain,develousr_domain,linux_domain,usr_proxy_develop", 
    "rule-set:category_media_cn_domain,chinamedia_domain,gamedownloadcn_domain,category_games_cn_domain,cn_domain,usr_direct,private_domain,direct_torrent,docker_domain,category_dev_domain,develousr_domain,linux_domain,usr_proxy_develop", 
    "+.services.googleapis.cn", "+.xn--ngstr-lra8j.com", 
    "+.ntp.tencent.com", "+.ntp1.aliyun.com", "time.*.com", 
    "+.ntp.ntsc.ac.cn", "+.pool.ntp.org", "+.cn.ntp.org.cn", 
    "+.yarnpkg.com", "+.ustclug.org",
    "start.me","+.start.me",
    "+.lan", "+.local", "geosite:cn"
    
  ]
  # DNS服务器配置
  default-nameserver: &cn_dns [119.29.29.29, 223.5.5.5, '2400:3200::1', '2402:4e00::']
  proxy-server-nameserver: *cn_dns
  nameserver: *cn_dns
  nameserver-policy: {
    "+.github.com": [8.8.8.8, 1.1.1.1], "github.com": [8.8.8.8, 1.1.1.1], 
    "+.githubusercontent.com": [8.8.8.8, 1.1.1.1],
    "+.debian.org": [8.8.8.8, 1.1.1.1], "+.yarnpkg.com": [8.8.8.8, 1.1.1.1], 
    "+.ustclug.org": [8.8.8.8, 1.1.1.1], "+.immortalwrt.org": [8.8.8.8, 1.1.1.1], 
    "+.openwrt.org": [8.8.8.8, 1.1.1.1]
  }

# 出站策略定义
proxymain: &proxymain {type: select, proxies: [亚洲自动, 亚洲自动测试, 香港自动, 香港自动测试, 台湾自动, 日本自动, 狮城自动, 美国自动, 环球节点, 全部节点, 国内直连]}
directmain: &directmain {type: select, proxies: [国内直连, 亚洲自动, 亚洲自动测试, 香港自动, 台湾自动, 日本自动, 狮城自动, 美国自动, 环球节点, 全部节点]}

proxy-groups:
  # 核心代理策略组
  - {name: 全球代理, <<: *proxymain, icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Proxy.png"}
  - {name: 国内直连, type: select, proxies: [直接连接], icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/CN.png"}
  # 特定服务策略组
  - {name: Apple, <<: *directmain, icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_1.png"}
  - {name: ApplePxy, <<: *proxymain, icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_2.png"}
  - {name: MicrosoftCN, <<: *directmain, icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/OneDrive.png"}
  - {name: Microsoft, <<: *proxymain, icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png"}
  - {name: Google, <<: *proxymain, icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png"}
  # 工具软件
  - {name: Develop, <<: *proxymain, icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/GitHub.png"}
  - {name: Intelligence, type: select, proxies: [AI自动, AI自动测试], icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Copilot.png"}
  - {name: Synology, <<: *directmain, icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Download.png"}
  # 通讯和钱包
  - {name: Telegram, type: select, proxies: [狮城自动测试, 狮城自动, 亚洲自动, 亚洲自动测试], icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png"}
  - {name: Wallet, type: select, proxies: [台湾自动, 国内直连, 全部节点], icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/PayPal.png"}
  # 媒体和娱乐
  - {name: Spotify, type: select, proxies: [国内直连, 亚洲自动, 亚洲自动测试, 全部节点], icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png"}
  - {name: TikTok, type: select, proxies: [美国自动, 国内直连], icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TikTok.png"}
  - {name: 国外流媒体, type: select, proxies: [流媒自动, 亚洲自动测试], icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ForeignMedia.png"}
  - {name: 游戏直连, <<: *directmain, icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png"}
  - {name: 游戏代理, <<: *proxymain, icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Steam.png"}
  # 其他
  - {name: Speedtest, <<: *directmain, icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Speedtest.png"}
  - {name: 漏网之鱼, <<: *proxymain, icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png"}
  - {name: ·, type: select, proxies: [国内直连]}

  # 区域自动测速分组
  - {name: 亚洲自动, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(香港|HK|Hong\\s?Kong|日本|新加坡|🇭🇰|🇯🇵|🇸🇬))^((?!(台湾|🇹🇼|福利|V1|0\\.\\d+x|[3-5]x|HKT|Alice|Moe|Hinet|ByteVirt|Akari|Cogent|Eons|Fastnet)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Auto.png"}
  - {name: 亚洲自动测试, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(香港|HK|Hong\\s?Kong|日本|新加坡|🇭🇰|🇯🇵|🇸🇬))^((?!(台湾|🇹🇼|福利|V1|0\\.\\d+x|[3-5]x)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/DE.png"}
  - {name: 香港自动, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(香港|HK|Hong\\s?Kong|🇭🇰))^((?!(福利|V1|0\\.\\d+x|[3-5]x|HKT|Alice|Moe)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png"}
  - {name: 香港自动测试, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(香港|HK|Hong\\s?Kong|🇭🇰))^((?!(福利|V1|0\\.\\d+x|[3-5]x)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/HK.png"}
  - {name: 台湾自动, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(台湾|🇹🇼))^((?!(福利|V1|0\\.\\d+x|[3-5]x|Hinet|ByteVirt)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Taiwan.png"}
  - {name: 台湾自动测试, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(台湾|🇹🇼))^((?!(福利|V1|0\\.\\d+x|[3-5]x)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TW.png"}
  - {name: 日本自动, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(日本|🇯🇵))^((?!(福利|V1|0\\.\\d+x|[3-5]x|Akari|Cogent)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png"}
  - {name: 日本自动测试, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(日本|🇯🇵))^((?!(福利|V1|0\\.\\d+x|[3-5]x)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/JP.png"}
  - {name: 狮城自动, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(新加坡|狮城|🇸🇬))^((?!(福利|V1|0\\.\\d+x|[3-5]x|Akari|Eons)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png"}
  - {name: 狮城自动测试, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(新加坡|狮城|🇸🇬))^((?!(福利|V1|0\\.\\d+x|[3-5]x)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/SG.png"}
  - {name: 美国自动, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(美国|🇺🇸))^((?!(福利|V1|0\\.\\d+x|[3-5]x|Cogent|Fastnet)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png"}
  - {name: 美国自动测试, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(美国|🇺🇸))^((?!(福利|V1|0\\.\\d+x|[3-5]x)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/US.png"}
  
  - {name: AI自动, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(日本|🇯🇵|美国|🇺🇸))^((?!(福利|V1|0\\.\\d+x|[3-5]x|Akari|Cogent|Cogent|Fastnet)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/ChatGPT.png"}
  - {name: AI自动测试, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(日本|🇯🇵|美国|🇺🇸))^((?!(福利|V1|0\\.\\d+x|[3-5]x)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/AIA.png"}
  - {name: 流媒自动, type: url-test, include-all: true, interval: 300, tolerance: 20, filter: "(?=.*(NF|Netflix|Disney|HBO|Hulu))^((?!(福利|V1|0\\.\\d+x|[3-5]x)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Media.png"}
  

  # 全局选择器
  - {name: 环球节点, type: select, include-all: true, filter: "^((?!(香港|HK|台湾|Taiwan|日本|新加坡|狮城|美国|福利|新用户|直连)).)*$", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Global.png"}
  - {name: 全部节点, type: select, include-all: true, icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Round_Robin_1.png"}
  # - {name: 环球节点测试, type: select, include-all: true, filter: "(?=.*(阿根廷Nato|韩国Oracle|土耳其Hostigger|英国Haruka|尼日利亚Melbikomas|德国Misaka|荷兰Liteserver|加拿大Oracle))", icon: "https://gh-proxy.com/raw.githubusercontent.com/Koolson/Qure/master/IconSet/Dark/Global.png"}

# 规则匹配
rules:
  # 基础网络和隐私规则
  - IP-CIDR,10.10.0.0/22,国内直连
  - RULE-SET,private_domain,国内直连
  
  # AI和智能服务
  - RULE-SET,category_ai_chat_notcn_domain,Intelligence
  - RULE-SET,usr_proxy_intelligence,Intelligence
  
  # 开发
  - RULE-SET,docker_domain,Develop
  - RULE-SET,category_dev_domain,Develop
  - RULE-SET,develousr_domain,Develop
  - RULE-SET,linux_domain,Develop
  - RULE-SET,usr_proxy_develop,Develop
  
  # 工具和实用服务
  - RULE-SET,onedrive_domain,MicrosoftCN
  - RULE-SET,synology_domain,Synology
  - RULE-SET,speedtest_domain,Speedtest
  
  # 通讯服务
  - RULE-SET,telegram_domain,Telegram
  - RULE-SET,paypal_domain,Wallet
  
  # 媒体服务
  - RULE-SET,spotify_domain,Spotify
  - RULE-SET,tiktok_domain,TikTok
  
  # 流媒体服务
  - RULE-SET,usr_proxy_media,国外流媒体
  - RULE-SET,globalmedia_domain,国外流媒体
  - RULE-SET,category_media_domain,国外流媒体
  - RULE-SET,category_media_cn_domain,国内直连
  - RULE-SET,chinamedia_domain,国内直连
  
  # 游戏
  - RULE-SET,gamedownloadcn_domain,游戏直连
  - RULE-SET,category_games_cn_domain,游戏直连
  - RULE-SET,gamedownload_domain,游戏代理
  - RULE-SET,category_games_domain,游戏代理
  
  # 互联网巨头服务
  - RULE-SET,apple_domain,Apple
  - RULE-SET,apple_notcn_domain,ApplePxy
  - RULE-SET,google_domain,Google
  - RULE-SET,microsoft_cn_domain,MicrosoftCN
  - RULE-SET,microsoft_domain,Microsoft
  
  # 互联网巨头服务(国内)
  # - RULE-SET,aliyun_domain,国内直连
  # - RULE-SET,alibaba_domain,国内直连
  # - RULE-SET,tencent_domain,国内直连
  # - RULE-SET,xiaomi_domain,国内直连
  # - RULE-SET,xiaohongshu_domain,国内直连
  
  # 全局代理
  - RULE-SET,usr_direct,国内直连
  - RULE-SET,usr_proxy,全球代理
  - RULE-SET,proxy_domain,全球代理
  - RULE-SET,gfw_domain,全球代理
  - RULE-SET,geolocation_notcn_domain,全球代理
  - RULE-SET,direct_torrent,国内直连
  - RULE-SET,cn_domain,国内直连
  
  # IP规则
  - RULE-SET,usr_proxy_develop_ip,Develop,no-resolve
  - RULE-SET,telegram_ip,Telegram,no-resolve
  - RULE-SET,globalmedia_ip,国外流媒体,no-resolve
  - RULE-SET,chinamedia_ip,国内直连
  - RULE-SET,google_ip,Google,no-resolve
  - RULE-SET,apple_ip,Apple
  - RULE-SET,direct_torrent_ip,国内直连
  - RULE-SET,cn_ip,国内直连
  - MATCH,漏网之鱼

# 规则集锚点定义
rule-anchor:
  domain: &domain {type: http, interval: 14400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 14400, behavior: classical, format: text}
  ip: &ip {type: http, interval: 14400, behavior: ipcidr, format: mrs}

rule-providers:
  # 基础网络和隐私规则
  private_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"
  
  # AI和智能服务
  category_ai_chat_notcn_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs"
  usr_proxy_intelligence:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/mihomo/MRS/Proxy-Intelligence.mrs"
  
  # 开发
  category_dev_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-dev.mrs"
  develousr_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Developer/Developer_OCD_Domain.mrs"
  docker_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Docker/Docker_OCD_Domain.mrs"
  linux_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/linux.mrs"
  usr_proxy_develop:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/mihomo/MRS/Proxy-Develop.mrs"
  
  # 工具和实用服务
  onedrive_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"
  synology_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/synology.mrs"
  speedtest_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/speedtest.mrs"
  
  # 通讯服务
  telegram_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"
  paypal_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"
  
  # 媒体服务
  spotify_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.mrs"
  tiktok_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"
  
  # 流媒体服务
  usr_proxy_media:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/mihomo/MRS/Proxy-Media.mrs"
  globalmedia_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/GlobalMedia/GlobalMedia_OCD_Domain.mrs"
  category_media_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-media.mrs"
  category_media_cn_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-media-cn.mrs"
  chinamedia_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/ChinaMedia/ChinaMedia_OCD_Domain.mrs"
  
  # 游戏
  gamedownloadcn_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Game/GameDownloadCN/GameDownloadCN_OCD_Domain.mrs"
  category_games_cn_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-games%40cn.mrs"
  gamedownload_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Game/GameDownload/GameDownload_OCD_Domain.mrs"
  category_games_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-games.mrs"
  
  # 互联网巨头服务
  apple_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"
  apple_notcn_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple%40cn.mrs"
  google_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"
  microsoft_cn_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft%40cn.mrs"
  microsoft_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"
  
  # 互联网巨头服务（国内）
#aliyun_domain:
#<<: *domain
#url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/aliyun.mrs"
#alibaba_domain:
#<<: *domain
#url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/alibaba.mrs"
#tencent_domain:
#<<: *domain
#url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tencent.mrs"
#xiaomi_domain:
#<<: *domain
#url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/XiaoMi/XiaoMi_OCD_Domain.mrs"
#xiaohongshu_domain:
#<<: *domain
#url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/xiaohongshu.mrs"
  
  # 全局代理
  usr_direct:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/mihomo/MRS/Direct.mrs"
  usr_proxy:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/mihomo/MRS/Proxy.mrs"
  proxy_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geosite/proxy.mrs"
  gfw_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"
  geolocation_notcn_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"
  
  # IP规则
  usr_proxy_develop_ip:
   <<: *ip
   url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/mihomo/MRS/Proxy-Develop-IP.mrs"
  telegram_ip:
   <<: *ip
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"
  globalmedia_ip:
   <<: *ip
   url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/GlobalMedia/GlobalMedia_OCD_IP.mrs"
  chinamedia_ip:
   <<: *ip
   url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/ChinaMedia/ChinaMedia_OCD_IP.mrs"
  google_ip:
   <<: *ip
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"
  apple_ip:
   <<: *ip
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geoip/apple.mrs"
  direct_torrent:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/mihomo/MRS/Direct-Torrent.mrs"
  direct_torrent_ip:
   <<: *ip
   url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/mihomoRules/master/mihomo/MRS/Direct-Torrent-IP.mrs"
  cn_domain:
   <<: *domain
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"
  cn_ip:
   <<: *ip
   url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"

#ntp:
#  enable: true
#  # 是否同步至系统时间，需要 root/管理员权限
#  write-to-system: false
#  server: time.apple.com
#  port: 123
#  interval: 30

# DNS模块
# dns:
# 添加预热配置
# preload-domain: true
# preload-domain-task: 15
# name-resolve-format: ipv4-only  # 如果只需要IPv4地址

# 添加预解析域名
# use-hosts: true
# prefetch-domain: true
# prefer-h3: false